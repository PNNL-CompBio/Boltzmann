# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.body $(srcdir)/Makefile.head \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.timing \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	install-sh missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = gcc
CCDEPMODE = @CCDEPMODE@
CFLAGS = ${OPT_FLAGS}
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
#
### End User configurable options ###
LIBS = libboltzmann.a -lm 
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MMAP_CONFIG = @MMAP_CONFIG@
MPI_EXECS = @MPI_EXECS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SERIAL_EXECS = @SERIAL_EXECS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TIMING_CONFIG = @TIMING_CONFIG@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
CLINKER = gcc
AR = ar
ARFLAGS = -crv
#OPT_FLAGS = -g -O2
OPT_FLAGS = -g -O0
EXECS = boltzmann boltzmann_boot_test deq lapack_test sbml2bo
DBG_FLAGS = -O0 -g
NO_OPT_FLAGS = -O0 -g
DCFLAGS = ${CFLAGS}
TFLAGS = -DTIMING_ON 
LFLAGS = -g -lm
TIMING_LIB = djb_timing.a 
TIMING_DEP = timingi.h djb_timing.h
TIMING_DEPS = timingi.h djb_timing_b.h djb_timing.h
LUNWIND_DEPS = luwtb.h luwtb1.h luwtb2.h
SERIAL_INCS = boltzmann_structs.h boot_state_struct.h super_state_struct.h super_state_pointers_struct.h state_struct.h rxn_struct.h rxn_matrix_struct.h molecules_matrix_struct.h molecule_struct.h compartment_struct.h vgrng_state_struct.h pseudoisomer_struct.h formation_energy_struct.h stack_level_elem_struct.h sbml2bo_struct.h t2js_struct.h $(TIMING_DEPS) $(LUNWIND_DEPS)
SERIAL_OBJS1 = boltzmann_init.o alloc0.o boltzmann_set_filename_ptrs.o read_params.o boltzmann_init_core.o io_size_init.o create_output_filenames.o open_output_files.o size_rxns_file.o init_rxn_file_keywords.o parse_rxn_file_keyword.o count_ws.o count_nws.o count_molecules.o is_a_coef.o alloc2.o rxns_init.o parse_reactions_file.o upcase.o parse_side_line.o find_colon.o sort_compartments.o merge_compartments.o unique_compartments.o unique_compartments_core.o translate_compartments.o sort_molecules.o merge_molecules.o unique_molecules.o unique_molecules_core.o alloc3.o species_init.o set_compartment_ptrs.o set_count_trans.o translate_regulation_metabolites.o molecules_lookup.o read_compartment_sizes.o read_initial_concentrations.o compartment_lookup.o check_initial_concentrations.o
SERIAL_OBJS2 = energy_init.o compute_standard_energies.o size_pseudoisomer_file.o alloc5.o parse_pseudoisomer_dg0f_file.o blank_to_dash.o sharp_pos.o alloc6.o compute_molecule_dg0tfs.o compute_molecule_dg0tf.o pseudoisomer_dg0tf.o compute_molecular_partition_probability.o compute_chemical_potential.o compute_reaction_dg0.o unalloc6.o compute_ke.o zero_solvent_coefficients.o compute_kss.o echo_inputs.o echo_params.o echo_reactions_file.o print_molecules_dictionary.o print_dg0_ke.o print_reactions_matrix.o recover_solvent_coefficients.o run_init.o vgrng_init.o vgrng.o print_rxn_likelihoods_header.o print_free_energy_header.o flatten_state.o free_boot_state2.o free_boot_state.o
SERIAL_OBJS3 = boltzmann_run.o update_rxn_log_likelihoods.o rxn_log_likelihoods.o rxn_likelihoods.o rxn_likelihood.o choose_rxn.o candidate_rxn.o binary_search_l_u_b.o update_regulations.o update_regulation.o rxn_count_update.o bndry_flux_update.o metropolis.o rxn_likelihood_postselection.o compute_delta_g_forward_entropy_free_energy.o print_counts.o print_likelihoods.o save_likelihoods.o print_free_energy.o print_boundary_flux.o print_restart_file.o print_reactions_view.o
SERIAL_OBJS4 = rxn_map_init.o rxn_map_parse_start_stop_line.o rxn_map_run.o alloc4.o form_molecules_matrix.o
SERIAL_OBJS5 = boltzmann_boot.o boot_init.o boot_alloc0.o boot_alloc1.o boot_io_init.o size_rxns_list.o boot_alloc2.o parse_rxn_list_line.o save_and_count_local_state.o boot_alloc3.o catenate_compartments_and_molecules.o global_merge_and_map_compartments.o sort_global_compartments.o global_merge_molecules.o sort_global_molecules.o boot_alloc4.o condense_strings.o fill_meta_data.o write_super_state.o copy_local_states.o boltzmann_mmap_superstate.o boltzmann_boot_check.o flatten_super_state.o boltzmann_rep_state_i.o
SERIAL_OBJS6 = boltzmann_global_to_local_counts.o boltzmann_global_to_local_fluxes.o boltzmann_local_to_global_counts.o boltzmann_local_to_global_fluxes.o size_file.o boltzmann_load.o boltzmann_number_of_reaction_files.o boltzmann_global_molecule_count.o boltzmann_length_state_i.o boltzmann_max_local_state_size.o boltzmann_size_superstate.o

#SERIAL_OBJS7 = deq_run.o alloc7.o fill_flux_pieces.o ode23tb.o init_base_reactants.o ode_num_jac.o num_jac_col.o blas.o ode_it_solve.o compute_flux_scaling.o approximate_fluxes.o vec_abs.o vec_div.o vec_max.o vec_mul.o ce_approximate_fluxes.o update_rxn_likelihoods.o print_concs_fluxes.o ode_print_concs_header.o ode_print_concs.o
SERIAL_OBJS7 = deq_run.o alloc7.o ode23tb.o init_base_reactants.o ode_num_jac.o num_jac_col.o blas.o ode_it_solve.o compute_flux_scaling.o approximate_fluxes.o vec_abs.o vec_div.o vec_max.o vec_mul.o ce_approximate_fluxes.o update_rxn_likelihoods.o print_concs_fluxes.o lsame.o dtrsm.o dlaswp.o dgetrf2.o dgetrf.o dgetrs.o dgemm.o ode_print_concs_header.o ode_print_concs.o
SBML_OBJS = sbml_to_boltzmann.o size_ms2js_file.o size_kg2js_file.o \
	sbml_alloc0.o sbml_set_file_names.o sbml_alloc2.o read_ms2js.o \
	read_kg2js.o sort_json_ids.o merge_sorted_strings.o \
	sbml_count_cmpts.o sbml_count_species.o sbml_alloc1.o \
	parse_sbml.o sbml_find_section.o \
	sbml_process_list_of_compartments.o count_ws.o count_nws.o \
	sbml_read_key_value.o sbml_lookup_compartment_attribute.o \
	sbml_volume_units_conversion.o sort_compartments.o \
	merge_compartments.o sbml_process_list_of_species.o \
	sbml_start_species_def.o sbml_parse_species_key_value.o \
	sbml_lookup_species_attribute.o sbml_process_substanceunits.o \
	sbml_generate_init_conc_line.o boltzmannize_string.o \
	sbml_find_string.o sbml_sort_species_trans.o \
	sbml_merge_species_trans.o sbml_process_list_of_reactions.o \
	sbml_look_for_in_reaction_tag.o sbml_process_reaction_tag.o \
	sbml_lookup_reaction_attribute.o \
	sbml_process_list_of_reactants_tag.o \
	sbml_process_list_of_products_tag.o \
	sbml_process_species_reference_tag.o \
	sbml_lookup_speciesref_attribute.o compartment_lookup.o \
	count_ntb.o
KFP_OBJS = keg_from_pseudoisomer.o count_ws.o count_nlb.o check_for_ws.o boltzmannize_json_id.o
KFM_OBJS = keg_from_modelseed.o count_ws.o count_ntb.o count_nor.o check_for_ws.o boltzmannize_json_id.o
KPM_OBJS = count_ws.o count_ntb.o count_nws.o 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .f .f90 .o
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.head $(srcdir)/Makefile.timing $(srcdir)/Makefile.body $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod u+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am am--refresh check check-am clean clean-generic dist \
	dist-all dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-generic \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am uninstall uninstall-am

default: $(EXECS)
all:  $(EXECS)

timingi.h: timingii.h
		./build_timingi.pl

djb_timing.a: djb_timing.a(djb_timing_init.o) \
	      djb_timing.a(djb_timing_print.o) \
	      djb_timing.a(djb_timing_start.o) \
	      djb_timing.a(djb_timing_stop.o) \
	      djb_timing.a(djb_timing_reset.o) \
	      djb_timing.a(itc_clock.o) timingi.h timingii.h

djb_timing.a(djb_timing_init.o): djb_timing_b.h djb_timing_init.c
		$(CC) $(NO_OPT_CFLAGS) $(TFLAGS) -c djb_timing_init.c
	        $(AR) $(ARFLAGS) djb_timing.a djb_timing_init.o

djb_timing.a(djb_timing_print.o): djb_timing_b.h djb_timing_print.c
		$(CC) $(NO_OPT_CFLAGS) $(TFLAGS) -c djb_timing_print.c
	        $(AR) $(ARFLAGS) djb_timing.a djb_timing_print.o

djb_timing.a(djb_timing_start.o): djb_timing_b.h djb_timing_start.c
		$(CC) $(NO_OPT_CFLAGS) $(TFLAGS) -c djb_timing_start.c
	        $(AR) $(ARFLAGS) djb_timing.a djb_timing_start.o

djb_timing.a(djb_timing_stop.o): djb_timing_b.h djb_timing_stop.c
		$(CC) $(NO_OPT_CFLAGS) $(TFLAGS) -c djb_timing_stop.c
	        $(AR) $(ARFLAGS) djb_timing.a djb_timing_stop.o

djb_timing.a(djb_timing_reset.o): djb_timing_b.h djb_timing_reset.c
		$(CC) $(NO_OPT_CFLAGS) $(TFLAGS) -c djb_timing_reset.c
	        $(AR) $(ARFLAGS) djb_timing.a djb_timing_reset.o

djb_timing.a(itc_clock.o): itc_clock.c itc_clock.h
		$(CC) $(NO_OPT_CFLAGS) $(TFLAGS) -c itc_clock.c
		$(AR) $(ARFLAGS) djb_timing.a itc_clock.o

ms2js_ids: $(KPM_OBJS)
	$(CLINKER) -O0 -o ms2js_ids $(KPM_OBJS)

#modelseed_2_json.o: modelseed_2_json.c $(SERIAL_INCS)
#	$(CC) $(DCFLAGS) $(TFLAGS) -c modelseed_2_json.c 

keg_ms_ids: $(KFM_OBJS)
	$(CLINKER) -O0 -o keg_ms_ids $(KFM_OBJS)

keg_from_modelseed.o: keg_from_modelseed.c count_ws.h count_ntb.h count_nor.h check_for_ws.h boltzmannize_json_id.h $(SERIAL_INCS) 
	$(CC) $(DCFLAGS) $(TFLAGS) -c keg_from_modelseed.c 

keg_ids: $(KFP_OBJS)
	$(CLINKER) -O0 -o keg_ids $(KFP_OBJS)

keg_from_pseudoisomer.o: keg_from_pseudoisomer.c count_ws.h count_nlb.h check_for_ws.h boltzmannize_json_id.h $(SERIAL_INCS) 
	$(CC) $(DCFLAGS) $(TFLAGS) -c keg_from_pseudoisomer.c 

boltzmannize_json_id.o: boltzmannize_json_id.c boltzmannize_json_id.h $(SERIAL_INCS) 
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmannize_json_id.c

count_nlb.o: count_nlb.c count_nlb.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c count_nlb.c

count_ntb.o: count_ntb.c count_ntb.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c count_ntb.c

count_nor.o: count_nor.c count_nor.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c count_nor.c

check_for_ws.o: check_for_ws.c check_for_ws.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c check_for_ws.c

libboltzmann.a: $(SERIAL_OBJS1)  $(SERIAL_OBJS2) $(SERIAL_OBJS3) $(SERIAL_OBJS4) $(SERIAL_OBJS5) $(SERIAL_OBJS6) $(SBML_OBJS) $(KFM_OBJS) $(KFP_OBJS) $(KPM_OBJS) $(SERIAL_OBJS7)
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_boot.o
	$(AR) $(ARFLAGS) libboltzmann.a boot_init.o
	$(AR) $(ARFLAGS) libboltzmann.a boot_alloc0.o
	$(AR) $(ARFLAGS) libboltzmann.a boot_alloc1.o
	$(AR) $(ARFLAGS) libboltzmann.a boot_io_init.o
	$(AR) $(ARFLAGS) libboltzmann.a size_rxns_list.o
	$(AR) $(ARFLAGS) libboltzmann.a boot_alloc2.o
	$(AR) $(ARFLAGS) libboltzmann.a parse_rxn_list_line.o
	$(AR) $(ARFLAGS) libboltzmann.a save_and_count_local_state.o
	$(AR) $(ARFLAGS) libboltzmann.a boot_alloc3.o
	$(AR) $(ARFLAGS) libboltzmann.a catenate_compartments_and_molecules.o
	$(AR) $(ARFLAGS) libboltzmann.a global_merge_and_map_compartments.o
	$(AR) $(ARFLAGS) libboltzmann.a sort_global_compartments.o
	$(AR) $(ARFLAGS) libboltzmann.a global_merge_molecules.o
	$(AR) $(ARFLAGS) libboltzmann.a sort_global_molecules.o
	$(AR) $(ARFLAGS) libboltzmann.a boot_alloc4.o
	$(AR) $(ARFLAGS) libboltzmann.a condense_strings.o
	$(AR) $(ARFLAGS) libboltzmann.a fill_meta_data.o
	$(AR) $(ARFLAGS) libboltzmann.a write_super_state.o
	$(AR) $(ARFLAGS) libboltzmann.a copy_local_states.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_mmap_superstate.o	
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_boot_check.o
	$(AR) $(ARFLAGS) libboltzmann.a flatten_super_state.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_rep_state_i.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_init.o
	$(AR) $(ARFLAGS) libboltzmann.a alloc0.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_set_filename_ptrs.o
	$(AR) $(ARFLAGS) libboltzmann.a read_params.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_init_core.o
	$(AR) $(ARFLAGS) libboltzmann.a io_size_init.o
	$(AR) $(ARFLAGS) libboltzmann.a create_output_filenames.o
	$(AR) $(ARFLAGS) libboltzmann.a open_output_files.o
	$(AR) $(ARFLAGS) libboltzmann.a size_rxns_file.o
	$(AR) $(ARFLAGS) libboltzmann.a init_rxn_file_keywords.o
	$(AR) $(ARFLAGS) libboltzmann.a parse_rxn_file_keyword.o
	$(AR) $(ARFLAGS) libboltzmann.a count_molecules.o
	$(AR) $(ARFLAGS) libboltzmann.a count_ws.o
	$(AR) $(ARFLAGS) libboltzmann.a count_nws.o
	$(AR) $(ARFLAGS) libboltzmann.a is_a_coef.o
	$(AR) $(ARFLAGS) libboltzmann.a alloc2.o
	$(AR) $(ARFLAGS) libboltzmann.a rxns_init.o
	$(AR) $(ARFLAGS) libboltzmann.a parse_reactions_file.o
	$(AR) $(ARFLAGS) libboltzmann.a parse_side_line.o
	$(AR) $(ARFLAGS) libboltzmann.a upcase.o
	$(AR) $(ARFLAGS) libboltzmann.a find_colon.o
	$(AR) $(ARFLAGS) libboltzmann.a sort_compartments.o
	$(AR) $(ARFLAGS) libboltzmann.a merge_compartments.o
	$(AR) $(ARFLAGS) libboltzmann.a unique_compartments.o
	$(AR) $(ARFLAGS) libboltzmann.a unique_compartments_core.o
	$(AR) $(ARFLAGS) libboltzmann.a translate_compartments.o
	$(AR) $(ARFLAGS) libboltzmann.a sort_molecules.o
	$(AR) $(ARFLAGS) libboltzmann.a merge_molecules.o
	$(AR) $(ARFLAGS) libboltzmann.a unique_molecules.o
	$(AR) $(ARFLAGS) libboltzmann.a unique_molecules_core.o
	$(AR) $(ARFLAGS) libboltzmann.a alloc3.o
	$(AR) $(ARFLAGS) libboltzmann.a species_init.o
	$(AR) $(ARFLAGS) libboltzmann.a set_compartment_ptrs.o
	$(AR) $(ARFLAGS) libboltzmann.a set_count_trans.o
	$(AR) $(ARFLAGS) libboltzmann.a translate_regulation_metabolites.o
	$(AR) $(ARFLAGS) libboltzmann.a molecules_lookup.o
	$(AR) $(ARFLAGS) libboltzmann.a read_compartment_sizes.o
	$(AR) $(ARFLAGS) libboltzmann.a read_initial_concentrations.o
	$(AR) $(ARFLAGS) libboltzmann.a compartment_lookup.o
	$(AR) $(ARFLAGS) libboltzmann.a check_initial_concentrations.o
	$(AR) $(ARFLAGS) libboltzmann.a energy_init.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_standard_energies.o
	$(AR) $(ARFLAGS) libboltzmann.a size_pseudoisomer_file.o
	$(AR) $(ARFLAGS) libboltzmann.a alloc5.o
	$(AR) $(ARFLAGS) libboltzmann.a parse_pseudoisomer_dg0f_file.o
	$(AR) $(ARFLAGS) libboltzmann.a sharp_pos.o
	$(AR) $(ARFLAGS) libboltzmann.a blank_to_dash.o
	$(AR) $(ARFLAGS) libboltzmann.a alloc6.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_molecule_dg0tfs.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_molecule_dg0tf.o
	$(AR) $(ARFLAGS) libboltzmann.a pseudoisomer_dg0tf.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_molecular_partition_probability.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_chemical_potential.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_reaction_dg0.o
	$(AR) $(ARFLAGS) libboltzmann.a unalloc6.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_ke.o
	$(AR) $(ARFLAGS) libboltzmann.a zero_solvent_coefficients.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_kss.o
	$(AR) $(ARFLAGS) libboltzmann.a echo_inputs.o
	$(AR) $(ARFLAGS) libboltzmann.a echo_params.o
	$(AR) $(ARFLAGS) libboltzmann.a echo_reactions_file.o
	$(AR) $(ARFLAGS) libboltzmann.a print_molecules_dictionary.o
	$(AR) $(ARFLAGS) libboltzmann.a print_dg0_ke.o
	$(AR) $(ARFLAGS) libboltzmann.a print_reactions_matrix.o
	$(AR) $(ARFLAGS) libboltzmann.a recover_solvent_coefficients.o
	$(AR) $(ARFLAGS) libboltzmann.a run_init.o
	$(AR) $(ARFLAGS) libboltzmann.a vgrng_init.o
	$(AR) $(ARFLAGS) libboltzmann.a vgrng.o
	$(AR) $(ARFLAGS) libboltzmann.a print_rxn_likelihoods_header.o
	$(AR) $(ARFLAGS) libboltzmann.a print_free_energy_header.o
	$(AR) $(ARFLAGS) libboltzmann.a flatten_state.o
	$(AR) $(ARFLAGS) libboltzmann.a free_boot_state2.o
	$(AR) $(ARFLAGS) libboltzmann.a free_boot_state.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_run.o
	$(AR) $(ARFLAGS) libboltzmann.a update_rxn_log_likelihoods.o
	$(AR) $(ARFLAGS) libboltzmann.a choose_rxn.o
	$(AR) $(ARFLAGS) libboltzmann.a bndry_flux_update.o
	$(AR) $(ARFLAGS) libboltzmann.a candidate_rxn.o
	$(AR) $(ARFLAGS) libboltzmann.a metropolis.o
	$(AR) $(ARFLAGS) libboltzmann.a rxn_likelihood.o
	$(AR) $(ARFLAGS) libboltzmann.a rxn_likelihood_postselection.o
	$(AR) $(ARFLAGS) libboltzmann.a rxn_log_likelihoods.o
	$(AR) $(ARFLAGS) libboltzmann.a rxn_likelihoods.o
	$(AR) $(ARFLAGS) libboltzmann.a binary_search_l_u_b.o
	$(AR) $(ARFLAGS) libboltzmann.a update_regulations.o
	$(AR) $(ARFLAGS) libboltzmann.a update_regulation.o
	$(AR) $(ARFLAGS) libboltzmann.a rxn_count_update.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_delta_g_forward_entropy_free_energy.o
	$(AR) $(ARFLAGS) libboltzmann.a print_counts.o
	$(AR) $(ARFLAGS) libboltzmann.a print_likelihoods.o
	$(AR) $(ARFLAGS) libboltzmann.a save_likelihoods.o
	$(AR) $(ARFLAGS) libboltzmann.a print_free_energy.o
	$(AR) $(ARFLAGS) libboltzmann.a check_initial_concentrations.o
	$(AR) $(ARFLAGS) libboltzmann.a print_boundary_flux.o
	$(AR) $(ARFLAGS) libboltzmann.a print_restart_file.o
	$(AR) $(ARFLAGS) libboltzmann.a print_reactions_view.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_global_to_local_counts.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_global_to_local_fluxes.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_local_to_global_counts.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_local_to_global_fluxes.o
	$(AR) $(ARFLAGS) libboltzmann.a size_file.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_load.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_global_molecule_count.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_max_local_state_size.o  
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_length_state_i.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_number_of_reaction_files.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmann_size_superstate.o
	$(AR) $(ARFLAGS) libboltzmann.a rxn_map_init.o
	$(AR) $(ARFLAGS) libboltzmann.a alloc4.o
	$(AR) $(ARFLAGS) libboltzmann.a form_molecules_matrix.o
	$(AR) $(ARFLAGS) libboltzmann.a rxn_map_parse_start_stop_line.o
	$(AR) $(ARFLAGS) libboltzmann.a rxn_map_run.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_to_boltzmann.o 
	$(AR) $(ARFLAGS) libboltzmann.a size_ms2js_file.o
	$(AR) $(ARFLAGS) libboltzmann.a size_kg2js_file.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_alloc0.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_alloc2.o 
	$(AR) $(ARFLAGS) libboltzmann.a read_ms2js.o
	$(AR) $(ARFLAGS) libboltzmann.a read_kg2js.o
	$(AR) $(ARFLAGS) libboltzmann.a sort_json_ids.o
	$(AR) $(ARFLAGS) libboltzmann.a merge_sorted_strings.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_set_file_names.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_count_cmpts.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_count_species.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_alloc1.o 
	$(AR) $(ARFLAGS) libboltzmann.a parse_sbml.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_find_section.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_process_list_of_compartments.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_read_key_value.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_lookup_compartment_attribute.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_volume_units_conversion.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_process_list_of_species.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_start_species_def.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_parse_species_key_value.o 
	$(AR) $(ARFLAGS) libboltzmann.a sbml_lookup_species_attribute.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_process_substanceunits.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_generate_init_conc_line.o
	$(AR) $(ARFLAGS) libboltzmann.a boltzmannize_string.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_find_string.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_sort_species_trans.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_merge_species_trans.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_process_list_of_reactions.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_look_for_in_reaction_tag.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_process_reaction_tag.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_lookup_reaction_attribute.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_process_list_of_reactants_tag.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_process_list_of_products_tag.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_process_species_reference_tag.o
	$(AR) $(ARFLAGS) libboltzmann.a sbml_lookup_speciesref_attribute.o
	$(AR) $(ARFLAGS) libboltzmann.a count_ntb.o
	$(AR) $(ARFLAGS) libboltzmann.a count_nlb.o
	$(AR) $(ARFLAGS) libboltzmann.a count_nor.o
	$(AR) $(ARFLAGS) libboltzmann.a check_for_ws.o
	$(AR) $(ARFLAGS) libboltzmann.a deq_run.o
	$(AR) $(ARFLAGS) libboltzmann.a alloc7.o
	$(AR) $(ARFLAGS) libboltzmann.a ode_print_concs_header.o
	$(AR) $(ARFLAGS) libboltzmann.a ode23tb.o
	$(AR) $(ARFLAGS) libboltzmann.a ode_print_concs.o
	$(AR) $(ARFLAGS) libboltzmann.a init_base_reactants.o
	$(AR) $(ARFLAGS) libboltzmann.a blas.o
	$(AR) $(ARFLAGS) libboltzmann.a lsame.o
	$(AR) $(ARFLAGS) libboltzmann.a dtrsm.o
	$(AR) $(ARFLAGS) libboltzmann.a dlaswp.o
	$(AR) $(ARFLAGS) libboltzmann.a dgetrf2.o
	$(AR) $(ARFLAGS) libboltzmann.a dgetrf.o
	$(AR) $(ARFLAGS) libboltzmann.a dgetrs.o
	$(AR) $(ARFLAGS) libboltzmann.a dgemm.o
	$(AR) $(ARFLAGS) libboltzmann.a ode_num_jac.o
	$(AR) $(ARFLAGS) libboltzmann.a compute_flux_scaling.o
	$(AR) $(ARFLAGS) libboltzmann.a approximate_fluxes.o
	$(AR) $(ARFLAGS) libboltzmann.a vec_abs.o
	$(AR) $(ARFLAGS) libboltzmann.a vec_div.o
	$(AR) $(ARFLAGS) libboltzmann.a vec_max.o
	$(AR) $(ARFLAGS) libboltzmann.a vec_mul.o
	$(AR) $(ARFLAGS) libboltzmann.a ce_approximate_fluxes.o
	$(AR) $(ARFLAGS) libboltzmann.a num_jac_col.o
	$(AR) $(ARFLAGS) libboltzmann.a ode_it_solve.o
	$(AR) $(ARFLAGS) libboltzmann.a update_rxn_likelihoods.o
	$(AR) $(ARFLAGS) libboltzmann.a print_concs_fluxes.o
#	$(AR) $(ARFLAGS) libboltzmann.a fill_flux_pieces.o

boltzmann_boot_test: boltzmann_boot_test.o libboltzmann.a
	$(CLINKER) $(LFLAGS) -o boltzmann_boot_test boltzmann_boot_test.o $(TIMING_LIB) $(LIBS)

boltzmann_boot_test.o: boltzmann_boot_test.c boltzmann_boot.h boltzmann_boot_check.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_boot_test.c

boltzmann_boot.o: $(SERIAL_INCS) boltzmann_boot.c boltzmann_boot.h alloc0.h read_params.h boot_init.h parse_rxn_list_line.h save_and_count_local_state.h boot_alloc3.h catenate_compartments_and_molecules.h global_merge_and_map_compartments.h global_merge_molecules.h boot_alloc4.h condense_strings.h fill_meta_data.h write_super_state.h boltzmann_mmap_superstate.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_boot.c

boot_init.o: $(SERIAL_INCS) boot_init.c boot_init.h boot_alloc0.h boot_alloc1.h boot_io_init.h size_rxns_list.h boot_alloc2.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boot_init.c

boot_alloc0.o: $(SERIAL_INCS) boot_alloc0.c boot_alloc0.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c boot_alloc0.c

boot_alloc1.o: $(SERIAL_INCS) boot_alloc1.c boot_alloc1.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c boot_alloc1.c

boot_io_init.o: $(SERIAL_INCS) boot_io_init.c boot_io_init.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boot_io_init.c

size_rxns_list.o: $(SERIAL_INCS) size_rxns_list.c size_rxns_list.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c size_rxns_list.c

boot_alloc2.o: $(SERIAL_INCS) boot_alloc2.c boot_alloc2.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c boot_alloc2.c

parse_rxn_list_line.o: $(SERIAL_INCS) parse_rxn_list_line.c parse_rxn_list_line.h count_ws.h count_nws.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c parse_rxn_list_line.c

save_and_count_local_state.o: $(SERIAL_INCS) save_and_count_local_state.c save_and_count_local_state.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c save_and_count_local_state.c

boot_alloc3.o: $(SERIAL_INCS) boot_alloc3.c boot_alloc3.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c boot_alloc3.c

catenate_compartments_and_molecules.o: $(SERIAL_INCS) catenate_compartments_and_molecules.c catenate_compartments_and_molecules.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c catenate_compartments_and_molecules.c

global_merge_and_map_compartments.o: $(SERIAL_INCS) global_merge_and_map_compartments.c global_merge_and_map_compartments.h sort_global_compartments.h unique_compartments_core.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c global_merge_and_map_compartments.c

sort_global_compartments.o: $(SERIAL_INCS) sort_global_compartments.c sort_global_compartments.h merge_compartments.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c sort_global_compartments.c

global_merge_molecules.o: $(SERIAL_INCS) global_merge_molecules.c global_merge_molecules.h sort_global_molecules.h unique_molecules_core.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c global_merge_molecules.c

sort_global_molecules.o: $(SERIAL_INCS) sort_global_molecules.c sort_global_molecules.h merge_molecules.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c sort_global_molecules.c

boot_alloc4.o: $(SERIAL_INCS) boot_alloc4.c boot_alloc4.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boot_alloc4.c

condense_strings.o: $(SERIAL_INCS) condense_strings.c condense_strings.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c condense_strings.c

fill_meta_data.o: $(SERIAL_INCS) fill_meta_data.c fill_meta_data.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c fill_meta_data.c

write_super_state.o: $(SERIAL_INCS) write_super_state.c write_super_state.h copy_local_states.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c write_super_state.c

copy_local_states.o: $(SERIAL_INCS) copy_local_states.c copy_local_states.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c copy_local_states.c

boltzmann_mmap_superstate.o: boltzmann_mmap_superstate.c boltzmann_mmap_superstate.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_mmap_superstate.c

boltzmann_boot_check.o: boltzmann_boot_check.c boltzmann_boot_check.h flatten_super_state.h boltzmann_rep_state_i.h echo_reactions_file.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_boot_check.c

flatten_super_state.o: $(SERIAL_INCS) flatten_super_state.c flatten_super_state.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c flatten_super_state.c

boltzmann_rep_state_i.o: boltzmann_rep_state_i.c boltzmann_rep_state_i.h flatten_state.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_rep_state_i.c

boltzmann: $(MMAP_OBJS) $(TIMING_LIB) boltzmann.o libboltzmann.a
	$(CLINKER) $(LFLAGS) -o boltzmann boltzmann.o $(SERIAL_OBJS1) $(SERIAL_OBJS2) $(SERIAL_OBJS3) $(SERIAL_OBJS4) $(SERIAL_OBJS5) $(SERIAL_OBJS7) $(MMAP_OBJS) $(TIMING_LIB) $(LIBS)

boltzmann.o: $(SERIAL_INCS) boltzmann.c boltzmann_init.h boltzmann_run.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann.c

deq: $(MMAP_OBJS) $(TIMING_LIB) deq.o libboltzmann.a
	$(CLINKER) $(LFLAGS) -o deq deq.o $(SERIAL_OBJS1) $(SERIAL_OBJS2) $(SERIAL_OBJS3) $(SERIAL_OBJS4) $(SERIAL_OBJS5) $(SERIAL_OBJS7) $(MMAP_OBJS) $(TIMING_LIB) $(LIBS)

boltzmann_init.o: $(SERIAL_INCS) boltzmann_init.c boltzmann_init.h alloc0.h read_params.h boltzmann_init_core.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_init.c

alloc0.o: $(SERIAL_INCS) alloc0.c alloc0.h boltzmann_set_filename_ptrs.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c alloc0.c

boltzmann_set_filename_ptrs.o: $(SERIAL_INCS) boltzmann_set_filename_ptrs.c boltzmann_set_filename_ptrs.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_set_filename_ptrs.c

read_params.o: $(SERIAL_INCS) read_params.c read_params.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c read_params.c

boltzmann_init_core.o: $(SERIAL_INCS) boltzmann_init_core.c boltzmann_init_core.h io_size_init.h alloc2.h rxns_init.h alloc3.h species_init.h energy_init.h echo_inputs.h run_init.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_init_core.c

io_size_init.o: $(SERIAL_INCS) io_size_init.c io_size_init.h create_output_filenames.h open_output_files.h sbml_to_boltzmann.h size_rxns_file.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c io_size_init.c

create_output_filenames.o: $(SERIAL_INCS) create_output_filenames.c create_output_filenames.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c create_output_filenames.c

open_output_files.o: $(SERIAL_INCS) open_output_files.c open_output_files.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c open_output_files.c

size_rxns_file.o: $(SERIAL_INCS) size_rxns_file.c size_rxns_file.h init_rxn_file_keywords.h parse_rxn_file_keyword.h count_molecules.h count_ws.h count_nws.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c size_rxns_file.c

init_rxn_file_keywords.o: $(SERIAL_INCS) init_rxn_file_keywords.c init_rxn_file_keywords.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c init_rxn_file_keywords.c

parse_rxn_file_keyword.o: $(SERIAL_INCS) parse_rxn_file_keyword.c parse_rxn_file_keyword.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c parse_rxn_file_keyword.c

count_molecules.o: $(SERIAL_INCS) count_molecules.c count_molecules.h count_ws.h count_nws.h is_a_coef.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c count_molecules.c

count_ws.o: $(SERIAL_INCS) count_ws.c count_ws.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c count_ws.c

count_nws.o: $(SERIAL_INCS) count_nws.c count_nws.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c count_nws.c

is_a_coef.o: $(SERIAL_INCS) is_a_coef.c is_a_coef.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c is_a_coef.c

alloc2.o: $(SERIAL_INCS) alloc2.c alloc2.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c alloc2.c

rxns_init.o: $(SERIAL_INCS) rxns_init.c rxns_init.h parse_reactions_file.h sort_compartments.h unique_compartments.h translate_compartments.h sort_molecules.h unique_molecules.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c rxns_init.c

parse_reactions_file.o: $(SERIAL_INCS) parse_reactions_file.h parse_reactions_file.c parse_rxn_file_keyword.h count_ws.h count_nws.h upcase.h is_a_coef.h parse_side_line.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c parse_reactions_file.c

parse_side_line.o: $(SERIAL_INCS) parse_side_line.h parse_side_line.c count_ws.h count_nws.h upcase.h is_a_coef.h find_colon.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c parse_side_line.c

upcase.o: upcase.c upcase.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c upcase.c

find_colon.o: find_colon.c find_colon.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c find_colon.c

sort_compartments.o: $(SERIAL_INCS) sort_compartments.c sort_compartments.h merge_compartments.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c sort_compartments.c

merge_compartments.o: $(SERIAL_INCS) merge_compartments.c merge_compartments.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c merge_compartments.c

unique_compartments.o: $(SERIAL_INCS) unique_compartments.c unique_compartments.h unique_compartments_core.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c unique_compartments.c

unique_compartments_core.o: $(SERIAL_INCS) unique_compartments_core.c unique_compartments_core.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c unique_compartments_core.c

translate_compartments.o: $(SERIAL_INCS) translate_compartments.c translate_compartments.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c translate_compartments.c

sort_molecules.o: $(SERIAL_INCS) sort_molecules.c sort_molecules.h merge_molecules.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c sort_molecules.c

merge_molecules.o: $(SERIAL_INCS) merge_molecules.c merge_molecules.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c merge_molecules.c

unique_molecules.o: $(SERIAL_INCS) unique_molecules.c unique_molecules.h unique_molecules_core.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c unique_molecules.c

unique_molecules_core.o: $(SERIAL_INCS) unique_molecules_core.c unique_molecules_core.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c unique_molecules_core.c

alloc3.o: $(SERIAL_INCS) alloc3.c alloc3.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c alloc3.c

species_init.o: $(SERIAL_INCS) species_init.c species_init.h set_compartment_ptrs.h set_count_trans.h translate_regulation_metabolites.h read_compartment_sizes.h read_initial_concentrations.h check_initial_concentrations.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c species_init.c

set_compartment_ptrs.o: $(SERIAL_INCS) set_compartment_ptrs.c set_compartment_ptrs.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c set_compartment_ptrs.c

set_count_trans.o: $(SERIAL_INCS) set_count_trans.c set_count_trans.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c set_count_trans.c

translate_regulation_metabolites.o: $(SERIAL_INCS) translate_regulation_metabolites.c translate_regulation_metabolites.h molecules_lookup.h

molecules_lookup.o: $(SERIAL_INCS) molecules_lookup.c molecules_lookup.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c molecules_lookup.c

read_compartment_sizes.o: $(SERIAL_INCS) read_compartment_sizes.c read_compartment_sizes.h compartment_lookup.h molecules_lookup.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c read_compartment_sizes.c

read_initial_concentrations.o: $(SERIAL_INCS) read_initial_concentrations.c read_initial_concentrations.h compartment_lookup.h molecules_lookup.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c read_initial_concentrations.c

compartment_lookup.o: $(SERIAL_INCS) compartment_lookup.c compartment_lookup.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compartment_lookup.c

check_initial_concentrations.o: $(SERIAL_INCS) check_initial_concentrations.c check_initial_concentrations.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c check_initial_concentrations.c

energy_init.o: $(SERIAL_INCS) energy_init.c energy_init.h compute_standard_energies.h compute_ke.h zero_solvent_coefficients.h compute_kss.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c energy_init.c

compute_standard_energies.o: $(SERIAL_INCS) compute_standard_energies.c compute_standard_energies.h size_pseudoisomer_file.h alloc5.h parse_pseudoisomer_dg0f_file.h alloc6.h compute_molecule_dg0tfs.h compute_molecular_partition_probability.h compute_chemical_potential.h compute_reaction_dg0.h unalloc6.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_standard_energies.c

size_pseudoisomer_file.o: $(SERIAL_INCS) size_pseudoisomer_file.c size_pseudoisomer_file.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c size_pseudoisomer_file.c

alloc5.o: $(SERIAL_INCS) alloc5.c alloc5.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c alloc5.c

parse_pseudoisomer_dg0f_file.o: $(SERIAL_INCS) parse_pseudoisomer_dg0f_file.c parse_pseudoisomer_dg0f_file.h sharp_pos.h blank_to_dash.h upcase.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c parse_pseudoisomer_dg0f_file.c

sharp_pos.o: $(SERIAL_INCS) sharp_pos.c sharp_pos.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c sharp_pos.c

blank_to_dash.o: $(SERIAL_INCS) blank_to_dash.c blank_to_dash.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c blank_to_dash.c

alloc6.o: $(SERIAL_INCS) alloc6.c alloc6.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c alloc6.c

compute_molecule_dg0tfs.o: $(SERIAL_INCS) compute_molecule_dg0tfs.c compute_molecule_dg0tfs.h compute_molecule_dg0tf.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_molecule_dg0tfs.c

compute_molecule_dg0tf.o: $(SERIAL_INCS) compute_molecule_dg0tf.c compute_molecule_dg0tf.h pseudoisomer_dg0tf.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_molecule_dg0tf.c

pseudoisomer_dg0tf.o: $(SERIAL_INCS) pseudoisomer_dg0tf.c pseudoisomer_dg0tf.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c pseudoisomer_dg0tf.c

compute_molecular_partition_probability.o: $(SERIAL_INCS) compute_molecular_partition_probability.c compute_molecular_partition_probability.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_molecular_partition_probability.c

compute_chemical_potential.o: $(SERIAL_INCS) compute_chemical_potential.c compute_chemical_potential.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_chemical_potential.c

compute_reaction_dg0.o: $(SERIAL_INCS) compute_reaction_dg0.c compute_reaction_dg0.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_reaction_dg0.c

unalloc6.o: $(SERIAL_INCS) unalloc6.c unalloc6.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c unalloc6.c

compute_ke.o: $(SERIAL_INCS) compute_ke.c compute_ke.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_ke.c

zero_solvent_coefficients.o: $(SERIAL_INCS) zero_solvent_coefficients.c zero_solvent_coefficients.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c zero_solvent_coefficients.c

compute_kss.o: $(SERIAL_INCS) compute_kss.c compute_kss.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_kss.c

echo_inputs.o: $(SERIAL_INCS) echo_inputs.c echo_inputs.h echo_params.h echo_reactions_file.h print_molecules_dictionary.h print_dg0_ke.h print_reactions_matrix.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c echo_inputs.c

echo_params.o: $(SERIAL_INCS) echo_params.c echo_params.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c echo_params.c

echo_reactions_file.o: $(SERIAL_INCS) echo_reactions_file.h echo_reactions_file.c
	$(CC) $(DCFLAGS) $(TFLAGS) -c echo_reactions_file.c

print_molecules_dictionary.o: $(SERIAL_INCS) print_molecules_dictionary.c print_molecules_dictionary.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_molecules_dictionary.c

print_dg0_ke.o: $(SERIAL_INCS) print_dg0_ke.c print_dg0_ke.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_dg0_ke.c

print_reactions_matrix.o: $(SERIAL_INCS) print_reactions_matrix.c print_reactions_matrix.h zero_solvent_coefficients.h recover_solvent_coefficients.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_reactions_matrix.c

recover_solvent_coefficients.o: $(SERIAL_INCS) recover_solvent_coefficients.c recover_solvent_coefficients.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c recover_solvent_coefficients.c

run_init.o: $(SERIAL_INCS) run_init.c run_init.h vgrng_init.h print_rxn_likelihoods_header.h print_free_energy_header.h flatten_state.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c run_init.c

vgrng_init.o: $(SERIAL_INCS) vgrng_init.c vgrng_init.h vgrng.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c vgrng_init.c

vgrng.o: $(SERIAL_INCS) vgrng.c vgrng.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c vgrng.c

print_rxn_likelihoods_header.o: $(SERIAL_INCS) print_rxn_likelihoods_header.c print_rxn_likelihoods_header.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_rxn_likelihoods_header.c

print_free_energy_header.o: $(SERIAL_INCS) print_free_energy_header.c print_free_energy_header.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_free_energy_header.c

flatten_state.o: $(SERIAL_INCS) flatten_state.c flatten_state.h boltzmann_set_filename_ptrs.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c flatten_state.c

free_boot_state2.o: $(SERIAL_INCS) free_boot_state2.c free_boot_state2.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c free_boot_state2.c

free_boot_state.o: $(SERIAL_INCS) free_boot_state.c free_boot_state.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c free_boot_state.c

boltzmann_run.o: $(SERIAL_INCS) boltzmann_run.c boltzmann_run.h update_rxn_log_likelihoods.h choose_rxn.h compute_delta_g_forward_entropy_free_energy.h print_counts.h print_likelihoods.h save_likelihoods.h print_free_energy.h print_boundary_flux.h print_restart_file.h print_reactions_view.h deq_run.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_run.c

update_rxn_log_likelihoods.o: $(SERIAL_INCS) update_rxn_log_likelihoods.c update_rxn_log_likelihoods.h rxn_log_likelihoods.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c update_rxn_log_likelihoods.c

choose_rxn.o: $(SERIAL_INCS) choose_rxn.c choose_rxn.h candidate_rxn.h metropolis.h bndry_flux_update.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c choose_rxn.c

candidate_rxn.o: $(SERIAL_INCS) candidate_rxn.c candidate_rxn.h vgrng.h binary_search_l_u_b.h update_regulations.h rxn_count_update.h rxn_count_update.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c candidate_rxn.c

metropolis.o: $(SERIAL_INCS) metropolis.c metropolis.h rxn_likelihood_postselection.h bndry_flux_update.h vgrng.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c metropolis.c

rxn_likelihood.o: $(SERIAL_INCS) rxn_likelihood.c rxn_likelihood.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c rxn_likelihood.c

rxn_log_likelihoods.o: $(SERIAL_INCS) rxn_log_likelihoods.c rxn_log_likelihoods.h rxn_likelihoods.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c rxn_log_likelihoods.c

rxn_likelihoods.o: $(SERIAL_INCS) rxn_likelihoods.c rxn_likelihoods.h rxn_likelihood.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c rxn_likelihoods.c

rxn_likelihood_postselection.o: $(SERIAL_INCS) rxn_likelihood_postselection.c rxn_likelihood_postselection.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c rxn_likelihood_postselection.c

binary_search_l_u_b.o: $(SERIAL_INCS) binary_search_l_u_b.c binary_search_l_u_b.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c binary_search_l_u_b.c

update_regualtions.o: $(SERIAL_INCS) update_regualtions.c update_regualtions.h update_regulation.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c update_regulations.c

update_regualtion.o: $(SERIAL_INCS) update_regualtion.c update_regualtion.h 
	$(CC) $(DCFLAGS) $(TFLAGS) -c update_regulations.c

rxn_count_update.o: $(SERIAL_INCS) rxn_count_update.c rxn_count_update.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c rxn_count_update.c

bndry_flux_update.o: $(SERIAL_INCS) bndry_flux_update.c bndry_flux_update.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c bndry_flux_update.c

compute_delta_g_forward_entropy_free_energy.o: $(SERIAL_INCS) compute_delta_g_forward_entropy_free_energy.c compute_delta_g_forward_entropy_free_energy.h update_regulations.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_delta_g_forward_entropy_free_energy.c

print_counts.o: $(SERIAL_INCS) print_counts.c print_counts.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_counts.c

print_likelihoods.o: $(SERIAL_INCS) print_likelihoods.c print_likelihoods.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_likelihoods.c

save_likelihoods.o: $(SERIAL_INCS) save_likelihoods.c save_likelihoods.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c save_likelihoods.c

print_free_energy.o: $(SERIAL_INCS) print_free_energy.c print_free_energy.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_free_energy.c

print_boundary_flux.o: $(SERIAL_INCS) print_boundary_flux.c print_boundary_flux.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_boundary_flux.c

print_restart_file.o: $(SERIAL_INCS) print_restart_file.c print_restart_file.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_restart_file.c

print_reactions_view.o: $(SERIAL_INCS) print_reactions_view.c print_reactions_view.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_reactions_view.c

form_molecules_matrix.o: $(SERIAL_INCS) form_molecules_matrix.c form_molecules_matrix.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c form_molecules_matrix.c

boltzmann_global_to_local_counts.o: boltzmann_global_to_local_counts.c boltzmann_global_to_local_counts.h flatten_super_state.h flatten_state.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_global_to_local_counts.c

boltzmann_global_to_local_fluxes.o: boltzmann_global_to_local_fluxes.c boltzmann_global_to_local_fluxes.h flatten_super_state.h flatten_state.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_global_to_local_fluxes.c

boltzmann_local_to_global_counts.o: boltzmann_local_to_global_counts.c boltzmann_local_to_global_counts.h flatten_super_state.h flatten_state.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_local_to_global_counts.c

boltzmann_local_to_global_fluxes.o: boltzmann_local_to_global_fluxes.c boltzmann_local_to_global_fluxes.h flatten_super_state.h flatten_state.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_local_to_global_fluxes.c

size_file.o: size_file.c size_file.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c size_file.c

boltzmann_load.o: boltzmann_load.c boltzmann_load.h size_file.h boltzmann_mmap_superstate.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_load.c

boltzmann_global_molecule_count.o: boltzmann_global_molecule_count.c boltzmann_global_molecule_count.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_global_molecule_count.c

boltzmann_max_local_state_size.o: boltzmann_max_local_state_size.c boltzmann_max_local_state_size.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_max_local_state_size.c

boltzmann_length_state_i.o: boltzmann_length_state_i.c boltzmann_length_state_i.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_length_state_i.c

boltzmann_number_of_reaction_files.o: boltzmann_number_of_reaction_files.c boltzmann_number_of_reaction_files.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_number_of_reaction_files.c

boltzmann_size_superstate.o: boltzmann_size_superstate.c boltzmann_size_superstate.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmann_size_superstate.c

sbml2bo: sbml2bo.o libboltzmann.a
	$(CLINKER) $(LFLAGS) -o sbml2bo sbml2bo.o $(TIMING_LIB) $(LIBS)

sbml2bo.o: sbml2bo.c alloc0.h size_ms2js_file.h size_kg2js_file.h sbml_alloc0.h sbml_alloc2.h read_ms2js.h read_kg2js.h sort_json_ids.h sbml_set_file_names.h sbml_count_cmpts.h sbml_count_species.h sbml_alloc1.h parse_sbml.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml2bo.c

sbml_to_boltzmann.o: sbml_to_boltzmann.c sbml_to_boltzmann.h size_ms2js_file.h size_kg2js_file.h sbml_alloc0.h sbml_alloc2.h read_ms2js.h read_kg2js.h sort_json_ids.h sbml_set_file_names.h sbml_count_cmpts.h sbml_count_species.h sbml_alloc1.h parse_sbml.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_to_boltzmann.c

size_ms2js_file.o: size_ms2js_file.c size_ms2js_file.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c size_ms2js_file.c

size_kg2js_file.o: size_kg2js_file.c size_kg2js_file.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c size_kg2js_file.c

sbml_alloc0.o: sbml_alloc0.c sbml_alloc0.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_alloc0.c

sbml_alloc2.o: sbml_alloc2.c sbml_alloc2.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_alloc2.c

read_ms2js.o: read_ms2js.c read_ms2js.h count_ntb.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c read_ms2js.c

read_kg2js.o: read_kg2js.c read_kg2js.h count_ntb.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c read_kg2js.c

sort_json_ids.o: sort_json_ids.c sort_json_ids.h merge_sorted_strings.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sort_json_ids.c

merge_sorted_strings.o: merge_sorted_strings.c merge_sorted_strings.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c merge_sorted_strings.c

sbml_set_file_names.o: sbml_set_file_names.c sbml_set_file_names.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_set_file_names.c 

sbml_count_cmpts.o: sbml_count_cmpts.c sbml_count_cmpts.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_count_cmpts.c 

sbml_count_species.o: sbml_count_species.c sbml_count_species.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_count_species.c 

sbml_alloc1.o: sbml_alloc1.c sbml_alloc1.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_alloc1.c

parse_sbml.o: parse_sbml.c parse_sbml.h sbml_find_section.h sbml_process_list_of_compartments.h sbml_process_list_of_species.h sbml_sort_species_trans.h sbml_process_list_of_reactions.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c parse_sbml.c 

sbml_find_section.o: sbml_find_section.c sbml_find_section.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_find_section.c

sbml_process_list_of_compartments.o: sbml_process_list_of_compartments.c sbml_process_list_of_compartments.h count_ws.h count_nws.h sbml_read_key_value.h sbml_lookup_compartment_attribute.h sort_compartments.h sbml_volume_units_conversion.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_process_list_of_compartments.c

sbml_read_key_value.o: sbml_read_key_value.c sbml_read_key_value.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_read_key_value.c

sbml_lookup_compartment_attribute.o: sbml_lookup_compartment_attribute.c sbml_lookup_compartment_attribute.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_lookup_compartment_attribute.c

sbml_volume_units_conversion.o: sbml_volume_units_conversion.c sbml_volume_units_conversion.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_volume_units_conversion.c

sbml_process_list_of_species.o: sbml_process_list_of_species.c sbml_process_list_of_species.h count_ws.h count_nws.h sbml_start_species_def.h sbml_parse_species_key_value.h sbml_generate_init_conc_line.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_process_list_of_species.c

sbml_start_species_def.o: sbml_start_species_def.c sbml_start_species_def.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_start_species_def.c

sbml_parse_species_key_value.o: sbml_parse_species_key_value.c sbml_parse_species_key_value.h sbml_read_key_value.h  sbml_lookup_species_attribute.h compartment_lookup.h sbml_process_substanceunits.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_parse_species_key_value.c

sbml_lookup_species_attribute.o: sbml_lookup_species_attribute.c sbml_lookup_species_attribute.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_lookup_species_attribute.c

sbml_process_substanceunits.o: sbml_process_substanceunits.c sbml_process_substanceunits.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_process_substanceunits.c

sbml_generate_init_conc_line.o: sbml_generate_init_conc_line.c sbml_generate_init_conc_line.h boltzmannize_string.h sbml_find_string.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_generate_init_conc_line.c

boltzmannize_string.o: boltzmannize_string.c boltzmannize_string.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c boltzmannize_string.c

sbml_find_string.o: sbml_find_string.c sbml_find_string.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_find_string.c

sbml_sort_species_trans.o: sbml_sort_species_trans.c sbml_sort_species_trans.h sbml_merge_species_trans.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_sort_species_trans.c

sbml_merge_species_trans.o: sbml_merge_species_trans.c sbml_merge_species_trans.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_merge_species_trans.c

sbml_process_list_of_reactions.o: sbml_process_list_of_reactions.c sbml_process_list_of_reactions.h count_ws.h count_nws.h sbml_look_for_in_reaction_tag.h sbml_process_reaction_tag.h sbml_process_list_of_reactants_tag.h sbml_process_list_of_products_tag.h sbml_process_species_reference_tag.h sbml_lookup_speciesref_attribute.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_process_list_of_reactions.c

sbml_look_for_in_reaction_tag.o: sbml_look_for_in_reaction_tag.c sbml_look_for_in_reaction_tag.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_look_for_in_reaction_tag.c

sbml_process_reaction_tag.o: sbml_process_reaction_tag.c sbml_process_reaction_tag.h sbml_lookup_reaction_attribute.h sbml_read_key_value.h count_ws.h count_nws.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_process_reaction_tag.c

sbml_lookup_reaction_attribute.o: sbml_lookup_reaction_attribute.c sbml_lookup_reaction_attribute.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_lookup_reaction_attribute.c

sbml_process_list_of_reactants_tag.o: sbml_process_list_of_reactants_tag.c sbml_process_list_of_reactants_tag.h count_ws.h count_nws.h sbml_read_key_value.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_process_list_of_reactants_tag.c

sbml_process_list_of_products_tag.o: sbml_process_list_of_products_tag.c sbml_process_list_of_products_tag.h count_ws.h count_nws.h sbml_read_key_value.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_process_list_of_products_tag.c

sbml_process_species_reference_tag.o: sbml_process_species_reference_tag.c sbml_process_species_reference_tag.h count_ws.h count_nws.h sbml_read_key_value.h sbml_lookup_speciesref_attribute.h sbml_find_string.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_process_species_reference_tag.c

sbml_lookup_speciesref_attribute.o: sbml_lookup_speciesref_attribute.c sbml_lookup_speciesref_attribute.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c sbml_lookup_speciesref_attribute.c

deq.o : deq.c $(SERIAL_INCS) boltzmann_init.h deq_run.h print_counts.h print_restart_file.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c deq.c

#deq_run.o: deq_run.c deq_run.h $(SERIAL_INCS) flatten_state.h alloc4.h form_molecules_matrix.h alloc7.h update_rxn_log_likelihoods.h fill_flux_pieces.h ode23tb.h

deq_run.o: deq_run.c deq_run.h $(SERIAL_INCS) flatten_state.h alloc4.h form_molecules_matrix.h alloc7.h update_rxn_log_likelihoods.h ode23tb.h ode_print_concs_header.h
	   $(CC) $(DCFLAGS) $(TFLAGS) -c deq_run.c

alloc7.o: alloc7.c alloc7.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c alloc7.c 

#fill_flux_pieces.o: fill_flux_pieces.c fill_flux_pieces.h $(SERIAL_INCS)
#	$(CC) $(DCFLAGS) $(TFLAGS) -c fill_flux_pieces.c 

ode_print_concs_header.o: ode_print_concs_header.c ode_print_concs_header.h $(SERIAL_INCS) 
	$(CC) $(DCFLAGS) $(TFLAGS) -c ode_print_concs_header.c

ode23tb.o: ode23tb.c ode23tb.h $(SERIAL_INCS) init_base_reactants.h compute_flux_scaling.h approximate_fluxes.h ode_num_jac.h ode_it_solve.h print_concs_fluxes.h blas.h ce_approximate_fluxes.h ode_print_concs.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c ode23tb.c 

ode_print_concs.o: ode_print_concs.c ode_print_concs.h $(SERIAL_INCS) 
	$(CC) $(DCFLAGS) $(TFLAGS) -c ode_print_concs.c

init_base_reactants.o: init_base_reactants.c init_base_reactants.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c init_base_reactants.c

compute_flux_scaling.o: compute_flux_scaling.c compute_flux_scaling.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c compute_flux_scaling.c

approximate_fluxes.o: approximate_fluxes.c approximate_fluxes.h update_rxn_likelihoods.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c approximate_fluxes.c 

vec_abs.o: vec_abs.c vec_abs.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c vec_abs.c

vec_div.o: vec_div.c vec_div.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c vec_div.c

vec_max.o: vec_max.c vec_max.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c vec_max.c

vec_mul.o: vec_mul.c vec_mul.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c vec_mul.c

ce_approximate_fluxes.o: ce_approximate_fluxes.c ce_approximate_fluxes.h update_rxn_likelihoods.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c ce_approximate_fluxes.c 

ode_num_jac.o: ode_num_jac.c ode_num_jac.h $(SERIAL_INCS) num_jac_col.h blas.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c ode_num_jac.c 

blas.o: blas.c blas.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c blas.c

num_jac_col.o: num_jac_col.c num_jac_col.h $(SERIAL_INCS) compute_flux_scaling.h approximate_fluxes.h ce_approximate_fluxes.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c num_jac_col.c 

ode_it_solve.o: ode_it_solve.c ode_it_solve.h $(SERIAL_INCS) compute_flux_scaling.h approximate_fluxes.h ce_approximate_fluxes.h
	$(CC) $(DCFLAGS) $(TFLAGS) -c ode_it_solve.c 

update_rxn_likelihoods.o: update_rxn_likelihoods.c update_rxn_likelihoods.h rxn_likelihoods.h $(SERIAL_INCS) 
	$(CC) $(DCFLAGS) $(TFLAGS) -c update_rxn_likelihoods.c

print_concs_fluxes.o: print_concs_fluxes.c print_concs_fluxes.h $(SERIAL_INCS)
	$(CC) $(DCFLAGS) $(TFLAGS) -c print_concs_fluxes.c 

lapack_test: lapack_test.o blas.o lsame.o dgemm.o dtrsm.o dgetrf.o dgetrs.o dgetrf2.o dlaswp.o
	     $(CLINKER) $(LFLAGS) -o lapack_test lapack_test.o blas.o lsame.o dgemm.o dtrsm.o dgetrf.o dgetrs.o dgetrf2.o dlaswp.o -lm $(LIBS)

lapack_test.o: lapack_test.c blas.h blas.c lsame.h lsame.c dgemm.c dgemm.h system_includes.h dtrsm.h 
	       $(CC) $(DCFLAGS) $(TFLAGS) -c lapack_test.c

lsame.o: lsame.c lsame.h system_includes.h
	 $(CC) $(DCFLAGS) $(TFLAGS) -c lsame.c

dgemm.o: dgemm.c dgemm.h system_includes.h lsame.h
	 $(CC) $(DCFLAGS) $(TFLAGS) -c dgemm.c

dtrsm.o: dtrsm.c dtrsm.h lsame.h system_includes.h
	 $(CC) $(DCFLAGS) $(TFLAGS) -c dtrsm.c

dgetrf.o: dgetrf.c dgetrf.h system_includes.h dgetrf2.h dlaswp.h dgemm.h dtrsm.h
	 $(CC) $(DCFLAGS) $(TFLAGS) -c dgetrf.c

dgetrf2.o: dgetrf2.c dgetrf2.h system_includes.h dlaswp.h dgemm.h dtrsm.h
	 $(CC) $(DCFLAGS) $(TFLAGS) -c dgetrf2.c

dlaswp.o: dlaswp.c dlaswp.h system_includes.h
	 $(CC) $(DCFLAGS) $(TFLAGS) -c dlaswp.c

dgetrs.o: dgetrs.c dgetrs.h system_includes.h lsame.h dlaswp.h dtrsm.h
	 $(CC) $(DCFLAGS) $(TFLAGS) -c dgetrs.c

clean:
	-/bin/rm -f *.o *.a *~ $(EXECS)
.c.o:
	$(CC) $(CFLAGS) $(TFLAGS) -c $<
.f.o:
	$(F77) $(FFLAGS) $(TFLAGS) -c $<
.f90.o:
	$(F90) $(FFLAGS) $(TFLAGS) -c $<
SUFFIXES: .f90

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
